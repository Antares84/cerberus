<?php
	// Initiate the autoloader. The file should be generated by Composer.
	// You will provide your own autoloader or require the files directly if you did
	// not install via Composer.
	require_once __DIR__ . '/re-autoload-2.0.php';

	// Register API keys at https://www.google.com/recaptcha/admin
	$siteKey = '6LdQ8RETAAAAAD2qZC4Q1dXSTfuGAqw2Kai77dHa';
	$secret = '6LdQ8RETAAAAAPl-2DzW8Ewt25oFYgPY2nFJFatc';

	// reCAPTCHA supported 40+ languages listed here: https://developers.google.com/recaptcha/docs/language
	$lang = 'en';
?>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
	<title>reCAPTCHA Example</title>
	<link rel="shortcut icon" href="//www.gstatic.com/recaptcha/admin/favicon.ico" type="image/x-icon"/>
	<style type="text/css">
		body{
			margin: 1em 5em 0 5em;
			font-family: sans-serif;
		}
		fieldset{
			display: inline;
			padding: 1em;
		}
	</style>
</head>
<body>
	<h1>reCAPTCHA Example</h1>
<?php
	if($siteKey === '' || $secret === ''){
		echo '<h2>Add your keys</h2>';
		echo '<p>If you do not have keys already then visit <tt>';
		echo '<a href = "https://www.google.com/recaptcha/admin">https://www.google.com/recaptcha/admin</a></tt> to generate them.';
		echo 'Edit this file and set the respective keys in <tt>$siteKey</tt> and';
		echo '<tt>$secret</tt>. Reload the page after this.</p>';
	}elseif(isset($_POST['g-recaptcha-response'])){
		// The POST data here is unfiltered because this is an example.
		// In production, *always* sanitise and validate your input'
		echo '<h2><tt>POST</tt> data</h2>';
		echo '<tt><pre>'.var_export($_POST).'</pre></tt>';

		// If the form submission includes the "g-captcha-response" field
		// Create an instance of the service using your secret
		$recaptcha = new \ReCaptcha\ReCaptcha($secret);

		// If file_get_contents() is locked down on your PHP installation to disallow
		// its use with URLs, then you can use the alternative request method instead.
		// This makes use of fsockopen() instead.
		// $recaptcha = new \ReCaptcha\ReCaptcha($secret, new \ReCaptcha\RequestMethod\SocketPost());
		// Make the call to verify the response and also pass the user's IP address
		$resp = $recaptcha->verify($_POST['g-recaptcha-response'], $_SERVER['REMOTE_ADDR']);

		if($resp->isSuccess()){
			# If the response is a success, that's it!
			echo '<h2>Success!</h2>';
			echo '<p>That\'s it. Everything is working. Go integrate this into your real project.</p>';
			echo '<p><a href="/">Try again</a></p>';
		}else{
			// If it's not successful, then one or more error codes will be returned.
			echo '<h2>Something went wrong</h2>';
			echo '<p>The following error was returned:';
			foreach ($resp->getErrorCodes() as $code) {
				echo '<tt>' , $code , '</tt> ';
			}
			echo '</p>';
			echo '<p>Check the error code reference at <tt><a href="https://developers.google.com/recaptcha/docs/verify#error-code-reference">https://developers.google.com/recaptcha/docs/verify#error-code-reference</a></tt>.';
			echo '<p><strong>Note:</strong> Error code <tt>missing-input-response</tt> may mean the user just didn\'t complete the reCAPTCHA.</p>';
			echo '<p><a href="/">Try again</a></p>';
		}
	}else{
		# Add the g-recaptcha tag to the form you want to include the reCAPTCHA element
		echo '<p>Complete the reCAPTCHA then submit the form.</p>';
		echo '<form action="/" method="post">';
			echo '<fieldset>';
				echo '<legend>An example form</legend>';
				echo '<p>Example input A: <input type="text" name="ex-a" value="foo"></p>';
				echo '<p>Example input B: <input type="text" name="ex-b" value="bar"></p>';

				echo '<div class="g-recaptcha" data-sitekey="<?php echo $siteKey; ?>"></div>';
				echo '<script type="text/javascript" src="https://www.google.com/recaptcha/api.js?hl=<?php echo $lang; ?>"></script>';
				echo '<p><input type="submit" value="Submit" /></p>';
			echo '</fieldset>';
		echo '</form>';
	}
echo '</body>';
echo '</html>';